import requests
import re

def Team_validate_season():
    #infinite loop to run until a valid input is entered letting the function return the value and terminate
    season_checker = True
    while season_checker:
        input_season = input("please enter the season you wish to search in the form xxxx-xxxx and make sure its between 1980-1981 and 2024-2025")
        # Regular expression to match "xxxx-xxxx" format where x is a digit
        Format = r'^\d{4}-\d{4}$'
        
        # Check if input matches the pattern
        if not re.match(Format, input_season):
            print("Invalid format. Please use 'xxxx-xxxx'.")
            

        # Split the input to extract both years
        years = input_season.split("-")
        #checking two years were entered, and they were both numbers before casting 
        if len(years) == 2 and years[0].isnumeric() and years[1].isnumeric():
            # Range Check, seeing if the years are within the valid range and if end_year ithe year immediatly after start_year
            if 1980 <= int(years[0]) <= 2024 and int(years[0]) == int(years[1]) - 1:
                return input_season
            else:
                print("Invalid season range. The start year must be between 1980 and 2024, and the second year must be the first year + 1.")
        else: 
            print("please only enter digits 1-9 other than the hyphen to seperate the two years")


def TeamInfo(TeamCode):
    if TeamCode != "": #presence check
        #URL to make request to
        url = "https://basketball-head.p.rapidapi.com/teams/{}/metadata/{}".format(TeamCode, Team_validate_season())

        headers = {
            "x-rapidapi-key": "8305d69966mshea9ff44e213c030p193d6ajsndb41cebeea5a",
            "x-rapidapi-host": "basketball-head.p.rapidapi.com"
        }#my unique API identifyer 
        
        response = requests.get(url, headers=headers)#make API request
        print(response.json())#return data in the form of a dictionary
    else:
        #error message
        print("Team: `{}` not found. Make sure the Team is spelled correctly and you have typed their FULL name. This program is NOT caps sensitive ".format(FullName))


def TeamCode(FullName):
    #define empty string to return if invalid name
    TeamCode = ""
    #URL to make request to
    url = "https://api.balldontlie.io/v1/teams"

    headers = {
        "Authorization": "ba6f4deb-cf5d-46b0-917f-033c616dfd50"
    }
    TeamCode = ""
    # Make the GET request to the API
    response = requests.get(url, headers=headers)
    if response.status_code == 200: # check request was succcessful
        data = response.json() #convert data to dictionary
        #check if entered Team is in the data .lower() avoids need for capitalisation
        team_found = any(team['full_name'].lower() == FullName for team in data['data'])
        while team_found : #only enter loop if above statement is true and thus the team exists
            for team in data['data']: #loop through teams
            # Check if the team's name (full_name) matches the input
                if team['full_name'].lower() == FullName: #
                    TeamCode = team['abbreviation'] #pull out the code
                    team_found = False #end loop

    else:
        # Print an error message if the request fails
        print("Error: {}".format(response.status_code))
        print(response.text)
    return TeamCode


def TeamRoster(TeamCode):
    if TeamCode != "":#presence check
        #URL to make request to
        url = "https://basketball-head.p.rapidapi.com/teams/{}/roster/{}".format(TeamCode, Team_validate_season())

        headers = {
            "x-rapidapi-key": "8305d69966mshea9ff44e213c030p193d6ajsndb41cebeea5a",
            "x-rapidapi-host": "basketball-head.p.rapidapi.com"
        }#my unique API identifyer 

        response = requests.get(url, headers=headers)#make API request
        print(response.json())#return data in the form of a dictionary
    else:
        #error message
        print("Team: `{}` not found. Make sure the Team is spelled correctly and you have typed their FULL name. This program is NOT caps sensitive ".format(FullName))


def TeamSched(TeamCode):
    if TeamCode != "":#presence check
        #URL to make request to
        url = "https://basketball-head.p.rapidapi.com/teams/{}/schedule/{}".format(TeamCode, Team_validate_season())

        headers = {
	"x-rapidapi-key": "3b8d19b3d9mshdbe3323960dbcf0p1a8d8djsn511ba619c7f2",
	"x-rapidapi-host": "basketball-head.p.rapidapi.com"
}

        response = requests.get(url, headers=headers)#make API request
        print(response.json()) #return data in the form of a dictionary
    else:
        #error message
        print("Team: `{}` not found. Make sure the Team is spelled correctly and you have typed their FULL name. This program is NOT caps sensitive ".format(FullName))


def UserSearch():
    #infinite loop to run until a valid input is entered letting the function return the value and terminate
    Valid = True
    while Valid:
        #take user input, to be used as an index when choosing their function
        SearchType = input("would you like to search a teams Info(1), Roster(2) or Schedule(3)? please enter 1, 2 or 3")
        if SearchType in ["1", "2", "3"]: #check for desired input
            return int(SearchType) #pass as index in list
        else: 
            print("Please enter 1, 2 or 3") # error message


#main program
FullName = input("Please enter the team name").lower()#user enters team to search for 
function_list = [TeamInfo, TeamRoster, TeamSched] #list of team info the user can choose from 
function_list[UserSearch()-1](TeamCode(FullName)) 
#the number entered in UserSearch is used as an index for the list of functions
#the team code of the full name is then passed into the chosen function

